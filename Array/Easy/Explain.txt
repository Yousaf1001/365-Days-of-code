Problem has been solved in three ways.
1)Brute force solution:
explaination:
   1)First Sort the array.
   2) Then find the second Largest Element from end of array.
   3) Be carefull,there are not always possible (n-2) element is second largest.
   4) Becuase it's possible,Array have duplicate number.
   5) In this case,Iterate array from backside till the number that not equal to largest number.

   #### Time and space complexity 
   time complexity : O(nlogn+n)
   space complexity:O(1)

2)Better Solution:
explaination:
   1)First find the largest element in the array.
   2) Then find the second largest element.
   3) condition: element is must less then largest but greater then all the other element of array.
   4)In this case we Iterate array till end to find second largest.

   #### Time and space complexity 
   time complexity : O(2n)
   space complexity:O(1)

3)optimization Solution:
explaination:
   1)first condition: we first find element largest then arr[i] element,if yes then  largest =arr[i].
   2)But before assign new number to largest.it already have a number  that are largest then previous number but less then this arr[i] number.
   3) it's means it's secondlargest.
   4)second condition:if  arr[i] larger then secondLargest but less then Largest.it's means to say it's we assign secondLargest=arr[i]
   5) second condition also handle duplicate largest number exception.

   #### Time and space complexity 
   time complexity : O(n)
   space complexity:O(1)
